base:
  project_name : waffer_project
  random_state : [34]
  target_col : Good/Bad
  test_size : 0.20
  remove_cols : ['Wafer']

s3_data_source: 
  bucket_name : wafferbucket
  bucket_folder_name : waffer_batch_files
  s3_root_folder_prefix : waffer
  s3_folder_list : ['waffer_batch_files']
  region_name : ap-south-1

artifacts:
  artifacts_dir : artifacts
  
  02_validation:
    s3_data_dir : artifacts/waffer_batch_files
    good_files_dir : artifacts/02_validation/good_files
    bad_files_dir : artifacts/02_validation/bad_files

  03_preprocess:
    preprocess_dir : artifacts/03_preprocess
    null_cols_fname : null_values.csv
    drop_cols_fname : cols_to_drop.csv
    drop_0std_fname : zero_std_cols.csv
    preprocessed_files : artifacts/03_preprocess/preprocessed_files

  04_split_data:
    split_data_dir : artifacts/04_split_data

  05_train:
    train_dir : artifacts/05_train
  
  06_evaluate:
    results_dir : artifacts/06_evaluate/results
    best_model_dir : artifacts/06_evaluate/best_model
    evaluate_on : ["roc_auc_score"]  # other 2 are - f1_score, gmean_score  --> only one at a time
  
hyperparams:
  KNNImputer:
    n_neighbors : 3
    weights : uniform

  balanced_random_forest:
    model_name : brfc_model.sav
    cv : 2
    verbose : 3
    n_estimators: [400]
    criterion: ['gini']
    max_depth: [2,4,1]  # range(2, 4, 1)
    max_features: ['auto']

  balanced_bagging_classifer:
    model_name : bbc_model.sav
    cv : 2
    verbose : 3
    n_estimators: [180]
    sampling_strategy: [0.25]   # (0, 1])      # alpha = N_{samp-minority}/N_{samp-Majority} after  
    replacement: [False]                      #                      resampling. 
    
  easy_ensemble_classifier:
    model_name : eec_model.sav
    cv : 2
    verbose : 3
    n_estimators: [180]
    sampling_strategy: [0.25]   # (0, 1])  # alpha = N_{samp-minority}/N_{samp-Majority} after  
    replacement: [False]                       #                      resampling.
    

