base:
  project_name : waffer_project
  random_state : [34]
  target_col : Good/Bad
  test_size : 0.20
  remove_cols : ['Wafer']

s3_data_source: 
  bucket_name : wafferbucket
  bucket_folder_name : waffer_batch_files
  s3_root_folder_prefix : waffer
  s3_folder_list : ['waffer_batch_files']
  region_name : ap-south-1

artifacts:
  artifacts_dir : artifacts
  
  02_validation:
    s3_data_dir : artifacts/waffer_batch_files
    good_files_dir : artifacts/02_validation/good_files
    bad_files_dir : artifacts/02_validation/bad_files

  03_preprocess:
    preprocess_dir : artifacts/03_preprocess
    null_cols_fname : null_values.csv
    preprocessed_files : artifacts/03_preprocess/preprocessed_files

  04_split_data:
    split_data_dir : artifacts/04_split_data

  05_train:
    train_dir : artifacts/05_train
  
hyperparams:
  KNNImputer:
    n_neighbors : 3
    weights : uniform

  balanced_random_forest:
    model_name : brfc_model.sav
    cv : 10
    verbose : 3
    n_estimators: [300, 350, 500]
    criterion: ['gini', 'entropy']
    max_depth: [2, 5, 1]  # range(2, 4, 1)
    max_features: ['auto', 'log2']

  balanced_bagging_classifer:
    model_name : bbc_model.sav
    cv : 10
    verbose : 3
    n_estimators: [150, 200]
    sampling_strategy: [0.5, 1.0, 0.75]  # alpha = N_{samp-minority}/N_{samp-Majority} after  
    replacement: [True, False]              #                      resampling.
    
  easy_ensemble_classifier:
    model_name : eec_model.sav
    cv : 10
    verbose : 3
    n_estimators: [150, 200]
    sampling_strategy: [0.5, 1.0, 0.75]  # alpha = N_{samp-minority}/N_{samp-Majority} after  
    replacement: [True, False]              #                      resampling.
    